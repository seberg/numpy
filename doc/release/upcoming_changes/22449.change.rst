Representation of NumPy scalars changed
---------------------------------------
As per :ref:`NEP 51 <NEP51>`, the scalar representation has been
updated to include the type information to avoid confusion with
Python scalars.
The are now printed as ``np.float64(3.0)`` rather than just ``3.0``.
This may disrupt workflows that store representations of numbers
(e.g. to files) making it harder to read them.  They should be stored
e.g. using ``str()`` or ``f"{scalar!s}"`` as explicit strings.
For the time being, affected users can use ``np.set_printoptions(legacy="1.25")``
to get the old behavior (with possibly few exceptions).
Documentation of downstream projects may require larger updates,
if tested, we are working on tooling for:
`doctest-plus <https://github.com/scientific-python/pytest-doctestplus>`__
to facilitate updates.
